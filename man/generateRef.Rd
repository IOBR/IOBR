% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateRef.R
\name{generateRef}
\alias{generateRef}
\title{Generate Reference Signature Matrix}
\usage{
generateRef(dds, pheno, FDR = 0.05, dat, method = "limma")
}
\arguments{
\item{dds}{raw count data from RNA-seq; Necessary if used the method DESeq2}

\item{pheno}{character vector; cell type class of the samples}

\item{FDR}{numeric; genes with BH adjust p value < FDR are considered significant.}

\item{dat}{data frame or matrix; normalized transcript quantification data (like FPKM, TPM). Note: cell's median expression level of the identified probes will be the output of reference_matrix.}

\item{method}{limma or DESeq2}
}
\value{
A list containing the reference signature matrix and possibly other elements depending on the analysis method used.
        The cells of the matrix represent the median expression level of identified significant genes across samples grouped by cell type.
}
\description{
This function generates a reference signature matrix for cell types based on differential expression analysis.
It can use either 'limma' for normalized data or 'DESeq2' for raw count data. The function identifies genes
with significant expression changes at a specified false discovery rate (FDR) threshold.
}
\examples{
# Simulate expression data for 1000 genes across 4 samples
expressionData <- matrix(runif(1000 * 4, min = 0, max = 10), ncol = 4)
rownames(expressionData) <- paste("Gene", 1:1000, sep = "_")
colnames(expressionData) <- paste("Sample", 1:4, sep = "_")

# Create phenotype data for the samples
phenotype <- c("celltype1", "celltype2", "celltype1", "celltype2")

# Simulate raw count data for 1000 genes across 4 samples
rawCountData <- matrix(sample(1:100, 1000 * 4, replace = TRUE), ncol = 4)
rownames(rawCountData) <- paste("Gene", 1:1000, sep = "_")
colnames(rawCountData) <- paste("Sample", 1:4, sep = "_")

# Create column data for building a DESeqDataSet
library(DESeq2)
colData <- data.frame(
  celltype = phenotype,
  condition = c("treated", "control", "treated", "control"),
  row.names = colnames(rawCountData))
# Assuming the design matrix is based on the condition
dds_object <- DESeqDataSetFromMatrix(countData = rawCountData, colData = colData, design = ~ condition)
}
